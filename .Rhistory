library(tidyverse)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(corrplot)
# Thème personnel
blue_theme <- function() {
theme(
# add border
panel.border = element_rect(colour = "blue", fill = NA, linetype = 2),
# color background
panel.background = element_rect(fill = "aliceblue"),
# modify grid
panel.grid.major.x = element_line(colour = "steelblue", linetype = 3, linewidth = 0.5),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(colour = "steelblue", linetype = 3, linewidth = 0.5),
panel.grid.minor.y = element_blank(),
# modify text, axis and colour
axis.text = element_text(colour = "steelblue", face = "italic"),
axis.title = element_text(colour = "steelblue"),
axis.ticks = element_line(colour = "steelblue"),
# text elements
plot.title = element_text(size = 16, face = 'bold', hjust = 0, vjust = 2, color="steelblue"),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 9, hjust = 1),
# legend at the bottom
legend.position = "bottom"
)
}
# Importation des données
data <- read.csv("dataMeta3b.csv", header = TRUE, sep = ",", dec = ".")
# Affichage des données
head(data)
# % de NA par variable
variable_details <- function(data) {
n_observations <- nrow(data)
df <- data.frame(
Type = sapply(data, class),
Missing_Percent = sapply(data, function(x) sum(is.na(x)) / n_observations * 100)
)
}
# Exploration des données
summary(data) # Affichage du résumé avec les noms de lignes
print(variable_details(data), row.names = FALSE) # Affichage du résumé sans les noms de lignes
# Suppression des variables inutiles
data <- data %>%
select(-ID_Participant)
# Recodage de la variables Expertise
data$Expertise[data$Expertise == "expert"] <- 1
data$Expertise[data$Expertise == "novice"] <- 0
# Recodage de la variables Etude
data$Etude[data$Etude == 'Etude 1'] <- 1
data$Etude[data$Etude == 'Etude 2'] <- 2
data$Etude[data$Etude == 'Etude 3'] <- 3
# Transformation des variables qualitatives en facteurs
varquali <- c("Domaine", "Specialite", "Expertise", "Etude", "Complexite")
for (var in varquali) {
data[,var] <- as.factor(data[,var])
}
# Affichage des données
head(data)
# Exploraiton des distributions des variables numériques
data %>%
select(-c(Domaine, Specialite, Expertise, Etude, Complexite, Eleve, ID_Participant)) %>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = round(value,30))) +
geom_histogram(bins = 5) +
facet_wrap(~name, scales = "free") +
blue_theme()
# Exploraiton des distributions des variables numériques
data %>%
select(-c(Domaine, Specialite, Expertise, Etude, Complexite, Eleve)) %>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = round(value,30))) +
geom_histogram(bins = 5) +
facet_wrap(~name, scales = "free") +
blue_theme()
# Exploraiton des distributions des variables numériques
data %>%
select(-c(Domaine, Specialite, Expertise, Etude, Complexite, Eleve)) %>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 5) +
facet_wrap(~name, scales = "free") +
blue_theme()
# Exploraiton des distributions des variables numériques
data %>%
select(-c(Domaine, Specialite, Expertise, Etude, Complexite, Eleve)) %>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 30) +
facet_wrap(~name, scales = "free") +
blue_theme()
